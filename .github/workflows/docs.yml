name: Deploy Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: "latest"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Build API Documentation
        run: |
          cargo doc --no-deps --all-features

      - name: Build mdBook Documentation  
        run: |
          cd doc
          mdbook build

      - name: Prepare Combined Documentation
        run: |
          mkdir -p _site
          # Copy mdBook output as main documentation
          cp -r doc/book/* _site/
          # Copy API docs to subdirectory
          mkdir -p _site/api
          cp -r target/doc/* _site/api/
          # Create index redirect
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8">
              <title>Mermaid Parser Documentation</title>
              <meta http-equiv="refresh" content="0; url=./introduction.html">
              <link rel="canonical" href="./introduction.html">
          </head>
          <body>
              <h1>ðŸ§  Mermaid Parser Neural Network Documentation</h1>
              <p>Redirecting to <a href="./introduction.html">main documentation</a>...</p>
              <p>Or visit the <a href="./api/mermaid_parser/">API documentation</a></p>
          </body>
          </html>
          EOF

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
